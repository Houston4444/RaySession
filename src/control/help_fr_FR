contrôle les démons de RaySession
    --help
        Afficher un court message d'aide
    --help-all
        Afficher toute l'aide
    --help-control
        Afficher l'aide des commandes de contrôle
    --help-server
        Afficher l'aide des commandes du serveur
    --help-session
        Afficher l'aide des commandes sur la session en cours
    --help-clients
        Afficher l'aide des commandes sur les clients 
    --port
        Specifier le port OSC du démon.
        Ce port peut également être spécifié
        avec la variable d'environnement RAY_CONTROL_PORT
    --detach
        Envoyer seulement le message OSC et ne pas attendre de réponse

* COMMANDES DE CONTRÔLE:
    start
        Démarre un démon si aucun n'est déjà démarré
    start_new
        Démarre un nouveau démon, renvoie son numéro de port OSC
    start_new_hidden
        Démarre un nouveau démon, renvoie son numéro de port OSC.
        Ce démon ne sera pas vu par ray_control
        sauf si son port est spécifié.
        Ce démon sera démarré sans aucune option,
        et l'état des options ne sera pas sauvegardé quand il s'arrêtera.
    stop
        Arrête tous les démons tournant
    list_daemons
        Liste les ports OSC des démons tournant
    get_port
        Renvoie le port OSC du démon par défaut
    get_root
        Renvoie le dossier racine des sessions
    get_pid
        Renvoie le PID du démon par défaut
    get_session_path
        Renvoie l'emplacement du dossier de la session en cours,
        retourne un code d'erreur si aucun démon ne tourne
        ou qu'aucune session n'est chargée.
    has_gui
        Retourne un code d'erreur si aucune IGU n'est attachée à ce démon
    has_local_gui
        Retourne un code d'erreur si aucune IGU sur cette machine
        n'est attachée à ce démon

* COMMANDES DU SERVEUR:
    new_session NOUVELLE_SESSION [MODÈLE_DE_SESSION]
        Sauvegarde la session en cours (s'il y en a une)
        ensuite crée et charge NOUVELLE_SESSION,
        éventuellement à partir du modèle MODÈLE_DE_SESSION
        
    open_session NOM_DE_LA_SESSION [MODÈLE_DE_SESSION]
        Sauvegarde la session en cours (s'il y en a une)
        charge NOM_DE_LA_SESSION (en la créant si elle n'existe pas,
        éventuellement à partir du modèle MODÈLE_DE_SESSION.
        
    open_session_off NOM_DE_LA_SESSION [MODÈLE_DE_SESSION]
        Fait la même chose que open_session
        mais ne démarre aucun client.
        
    list_sessions
        Liste les sessions disponibles dans le dossier racine des sessions
    quit
        Abandonne la session en cours (si présente)
        puis arrête le démon.
    change_root NOUVEAU_DOSSIER_RACINE
        Change le dossier racine des session en NOUVEAU_DOSSIER_RACINE
    set_terminal_command TERMINAL_COMMAND
        change la commande de terminal pour les clients, définir TERMINAL_COMMAND à '' pour remettre par défaut
    list_session_templates
        Liste les modèles de session
    list_user_client_templates
        Liste les modèles de client de l'utilisateur
    list_factory_client_templates
        Liste les modèles de client d'usine
    remove_client_template MODÈLE_DE_CLIENT
        Supprime le modèle de client de l'utilisateur MODÈLE_DE_CLIENT
    set_options OPTION1 [OPTION2] [OPTION3]...
        Configure les options du démon.
        Les options disponibles sont:
            bookmark_session_folder
            desktops_memory
            snapshots
            session_scripts
            gui_states
        Précédez l'option de 'not_' pour désactiver cette option
        Exemple: ray_control set_options bookmark_session_folder not_snapshots
    has_option OPTION
        Retourne un code d'erreur si OPTION n'est pas enclenchée
    script_info TEXTE
        Affiche une fenêtre de dialogue d'information sur l'IGU de RaySession
    hide_script_info
        Cache la fenêtre de dialogue d'information de l'IGU de RaySession
    script_user_action TEXTE
        Affiche une fenêtre de dialogue de question sur l'IGU de RaySession
        Retourne quand l'utilisateur l'a acceptée ou refusée.
    has_attached_gui
        Retourne un code d'erreur si aucune IGU n'est attachée à ce démon

* COMMANDES DE LA SESSION:
    Toutes ces commandes fonctionne uniquement quand une session est chargée.
    
    save
        Sauvegarde la session en cours.
        ASTUCE: affectez la commande 'ray_control save' à un raccourci clavier global
    save_as_template NOM_DU_MODÈLE_DE_SESSION
        Sauvegarde la session en cours comme modèle de session
    take_snapshot NOM_DU_CLICHÉ
        Prend un cliché de la session en cours
    close
        Sauvegarde et ferme la session en cours
    abort
        Abandonne la session en cours
    duplicate NOUVELLE_SESSION
        Sauvegarde et duplique la session en cours et charge NOUVELLE_SESSION  
    process_step
        Procède à la prochaine étape du processus.
        Utile uniquement dans process_step_save.sh et process_step_close.sh
        dans les scripts de session.
    open_snapshot CLICHÉ
        Sauvegarde et ferme la session, retourne au cliché CLICHÉ et ré-ouvre la session 
    rename NOUVEAU_NOM_DE_LA_SESSION
        renomme la session en cours en NOUVEAU_NOM_DE_LA_SESSION
    add_exec EXÉCUTABLE [OPTION1] [OPTION2]...
        Ajoute EXÉCUTABLE à la session en cours.
        Les options disponibles sont
            ray_hack    lancer l'exécutable avec le protocole Ray-Hack (pas NSM) 
            not_start   preparer le client mais ne pas le démarrer
            prefix_mode:client_name
                        Mettre le mode de préfixe sur "Nom du client"
            prefix_mode:session_name
                        Mettre le mode de préfixe sur "Nom de la session"
            prefix:$PREFIXE
                        Mettre le mode de préfixe sur "Personnalisé"
                        et le préfixe sur $PREFIXE
            client_id:$NOUVEAU_CLIENT_ID
                        Essayer d'utiliser $NOUVEAU_CLIENT_ID.
                        Très utile pour utiliser des fichiers préalablement
                        copiés dans le repertoire de la session.
    add_factory_client_template MODÈLE_DE_CLIENT [not_start]
        Ajoute un client à la session selon MODÈLE_DE_CLIENT d'usine
        Avec l'argument not_started, le client sera ajouté mais ne sera pas lancé
    add_user_client_template MODÈLE_DE_CLIENT [not_start]
        Ajoute un client à la session selon MODÈLE_DE_CLIENT utilisateur
        Avec l'argument not_started, le client sera ajouté mais ne sera pas lancé
    list_snapshots
        Lister les clichés de la session
    list_clients [FILTER1] [FILTER2] [FILTER3]...
        Lister les clients de la session par leur client_id
        Les filtres disponibles sont:
            started
            active
            auto_start
            no_save_level
        Précédez le filtre avec 'not_' pour inverser le filtre
        Exemple: ray_control list_clients auto_start not_started
        Affichera tous les clients arrêtés qui doivent être démarrés à l'ouverture de la session
    clear_clients [CLIENT_ID1] [CLIENT_ID2]...
        Utilisable seulement dans le script de session load.sh, avant run_step.
        Utilisé pour supprimer les clients qui peuvent avoir été gardés de la session précédente.
        Sans arguments, ça supprime tous les clients tournants,
        sinon ça supprime les clients donnés par leur CLIENT_ID.
    set_notes NOTES
        Définir les notes de session comme étant NOTES. Attention, celà écrase les notes de session.
    show_notes
        Demande aux IGUs attachées d'afficher la boîte de notes
    hide_notes
        Demande aux IGUs attachées de cacher la boîte de notes

* COMMANDES DE CLIENT:
    Les commandes de client doivent être écrites de cette manière:
    ray_control client CLIENT_ID commande [*ARGUMENTS]
    example: ray_control client carla stop

    stop
        Arrête le client poliment.
    kill
        Tue le client. À n'utiliser qu'en dernier recours
    trash
        Envoyer le client à la corbeille. Le client doit être arrêté.
    start
        Démarre le client
    resume
        Démarre le client
    open
        Démarre le client,
        ne retourne la commande qu'une fois que le client est prêt,
        connu comme étant non actif, ou trop long à communiquer. 
    save
        Sauvegarde le client
    save_as_template NOM_DU_MODÈLE
        Sauvegarde le client comme modèle NOM_DU_MODÈLE.
        Écrase le modèle NOM_DU_MODÈLE s'il existe déjà.
    show_optional_gui
        Affiche l'IGU du client s'il en est capable
    hide_optional_gui
        Cache l'IGU du client s'il en est capable
    get_properties
        Renvoie les propriétés du client
    set_properties PROPRIÉTÉ1 [PROPRIÉTÉ2] [PROPRIÉTÉ3]...
        Définit les les propriétés du client.
        Le client doit être Ray Proxy et non démarré.
        PROPRIÉTÉ doit contenir propriété:valeur
        exemple: client carla set_properties icon:carla "label:Mon rack Carla"
    set_custom_data PROPERTY VALUE
        Définir une propriété personnalisée pour le client.
        Elle ne sera pas utilisée par le démon.
    get_custom_data PROPERTY
        retourne la valeur de la propriété personnalisée.
    set_tmp_data PROPERTY VALUE
        Définir un propriété personnalisée temporaire pour le client.
        Elle ne sera pas utilisée par le démon.
        Cette propriété ne sera pas sauvegardée avec la session.
    get_tmp_data PROPERTY
        retourne la valeur de la propriété personnalisée temporaire.
    list_files
        Liste les fichiers et dossiers du client
    list_snapshots
        Liste les clichés de la session où le client existe
    open_snapshot CLICHÉ
        Arrête le client s'il est démarré,
        charge le CLICHÉ seulement pour les fichiers du client,
        redémarre le client s'il était démarré.
    is_started
        Retourne un code d'erreur si le client n'est pas démarré
    get_pid
        Retourne le pid du processus du client si il est démarré
        
* COMMANDES DE CLIENT MIS À LA CORBEILLE:
    Les commandes de client mis à la corbeille doivent être écrites de cette manière:
    ray_control trashed_client CLIENT_ID command [*ARGUMENTS]
    exemple: ray_control trashed_client carla restore

    restore
        Restaure le client dans la session.
        Le client est restauré arrêté.
    remove_definitely
        Supprime définitivement le client et tous ses fichiers et dossiers.
    remove_keep_files
        Supprime le client de la corbeille, mais ne supprime pas ses fichiers.
